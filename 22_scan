#include <stdio.h>
#include <stdlib.h>

void main() {
    int requests[20], n, head, totalSeek = 0, direction, end;

    // Input number of disk requests, disk requests, head position, disk size, and direction
    printf("Enter the number of disk requests: ");
    scanf("%d", &n);
    printf("Enter the disk requests: ");
    for (int i = 0; i < n; i++) 
        scanf("%d", &requests[i]);
    printf("Enter the initial head position: ");
    scanf("%d", &head);
    printf("Enter the disk size (last track number): ");
    scanf("%d", &end);
    printf("Enter direction (1 for up, 0 for down): ");
    scanf("%d", &direction);

    // Sort requests in ascending order
    for (int i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            if (requests[i] > requests[j]) {
                int temp = requests[i];
                requests[i] = requests[j];
                requests[j] = temp;
            }
        }
    }

    printf("\nDisk Scheduling Process:\n");

    // SCAN Disk Scheduling Process
    if (direction) {  // Moving up
        for (int i = 0; i < n && requests[i] < head; i++);
        for (int i = i; i < n; i++) {
            printf("Moved to %d, Seek time: %d\n", requests[i], abs(head - requests[i]));
            totalSeek += abs(head - requests[i]);
            head = requests[i];
        }
        printf("Moved to %d (end), Seek time: %d\n", end, abs(head - end));
        totalSeek += abs(head - end);
        head = end;
        for (int i = n - 1; i >= 0 && requests[i] < head; i--) {
            printf("Moved to %d, Seek time: %d\n", requests[i], abs(head - requests[i]));
            totalSeek += abs(head - requests[i]);
            head = requests[i];
        }
    } else {  // Moving down
        for (int i = n - 1; i >= 0 && requests[i] > head; i--);
        for (int i = i; i >= 0; i--) {
            printf("Moved to %d, Seek time: %d\n", requests[i], abs(head - requests[i]));
            totalSeek += abs(head - requests[i]);
            head = requests[i];
        }
        printf("Moved to 0 (start), Seek time: %d\n", abs(head - 0));
        totalSeek += abs(head - 0);
        head = 0;
        for (int i = 0; i < n && requests[i] > head; i++) {
            printf("Moved to %d, Seek time: %d\n", requests[i], abs(head - requests[i]));
            totalSeek += abs(head - requests[i]);
            head = requests[i];
        }
    }

    // Output total seek time
    printf("\nTotal Seek Time: %d\n", totalSeek);
}
